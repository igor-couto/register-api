name: Build, Test, Build image and Deploy to Azure

on: push

jobs:

  Build:
    runs-on: ubuntu-latest
    steps:
      
      - name: Checkout GitHub Action
        uses: actions/checkout@main

      - name: Build Projects
        run: |
          dotnet build RegisterAPI 
          dotnet build Tests/Integration
  
  Tests:
    needs: Build
    runs-on: ubuntu-latest
    steps:

      - name: Checkout GitHub Action
        uses: actions/checkout@main

      - name: Integration Testing
        run: dotnet test Tests/Integration --verbosity minimal

  Deploy:
    needs: Tests
    if: GITHUB_REF##*/ == ${{ github.event.repository.default_branch }}
    runs-on: ubuntu-latest
      
    steps:
        - name: Checkout GitHub Action
          uses: actions/checkout@main

        - name: Login via Azure CLI
          uses: azure/login@v1
          with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}

        - name: Azure Container Registry Login
          uses: azure/docker-login@v1
          with:
            login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
            username: ${{ secrets.REGISTRY_USERNAME }}
            password: ${{ secrets.REGISTRY_PASSWORD }}

        - name: Build and Push image to ACR
          run: |
            docker build ./RegisterAPI/ -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/register-api:${{ github.sha }}
            docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/register-api:${{ github.sha }}

        - name: Deploy to Azure Container Instances
          uses: 'azure/aci-deploy@v1'
          with:
            resource-group: ${{ secrets.RESOURCE_GROUP }}
            dns-name-label: ${{ secrets.RESOURCE_GROUP }}${{ github.run_number }}
            image: ${{ secrets.REGISTRY_LOGIN_SERVER }}/register-api:${{ github.sha }}
            registry-login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
            registry-username: ${{ secrets.REGISTRY_USERNAME }}
            registry-password: ${{ secrets.REGISTRY_PASSWORD }}
            cpu: 1
            memory: 0.5
            name: register-api
            location: 'brazilsouth'
            environment-variables: CONNECTIONSTRINGS__DEFAULTCONNECTION=${{ secrets.CONNECTIONSTRINGS__DEFAULTCONNECTION }}
            ports: 5000